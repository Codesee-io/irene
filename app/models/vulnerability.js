import DS from 'ember-data';
import Ember from 'ember';
import ENUMS from 'irene/enums';
import { translationMacro as t } from 'ember-i18n';

const Vulnerability = DS.Model.extend({
  i18n: Ember.inject.service(),
  name: DS.attr('string'),
  uuid: DS.attr('string'),
  description: DS.attr('string'),
  question: DS.attr('string'),
  successMessage: DS.attr('string'),
  moreInfo: DS.attr('string'),
  heading: DS.attr('string'),
  intro: DS.attr('string'),
  complaint: DS.attr('string'),
  platform: DS.attr('number'),
  nonComplaint: DS.attr('string'),
  relatedTo: DS.attr('string'),
  businessImplication: DS.attr('string'),
  types: DS.attr(),

  tStatic: t("static"),
  tDynamic: t("dynamic"),
  tManual: t("manual"),
  tAPI: t("api"),

  descriptionUnescapedd: (function() {
    return this.get('description').htmlSafe();
  }).property('description'),

  tags: (function() {
    const types = this.get("types");
    if (types === undefined) { return []; }
    const tags = [];
    for (let type of Array.from(types)) {
      if (type === ENUMS.VULNERABILITY_TYPE.STATIC) {
        tags.push("static");
      }
      if (type === ENUMS.VULNERABILITY_TYPE.DYNAMIC) {
        tags.push("dynamic");
      }
      if (type === ENUMS.VULNERABILITY_TYPE.MANUAL) {
        tags.push("manual");
      }
      if (type === ENUMS.VULNERABILITY_TYPE.API) {
        tags.push("api");
      }
    }
    return tags;
  }).property("types")
});

export default Vulnerability;
