import Ember from 'ember';
import localeConfig from 'ember-i18n/config/en';
import { moduleForModel, test } from 'ember-qunit';

moduleForModel('vulnerability', 'Unit | Model | vulnerability', {
  needs: [
  'service:i18n',
  'locale:en/translations',
  'locale:en/config',
  'util:i18n/missing-message',
  'util:i18n/compile-template',
  'config:environment'
  ],
  beforeEach() {
    // set the locale and the config
    Ember.getOwner(this).lookup('service:i18n').set('locale', 'en');
    this.register('locale:en/config', localeConfig);
  }
});

test('it exists', function(assert) {
  const vulnerability = this.subject();

  Ember.run(function() {
    vulnerability.set("description", "<h1>Hello World</h1>");
    assert.equal(vulnerability.get("descriptionUnescapedd").string, "<h1>Hello World</h1>", 'Description');

    vulnerability.set("types", undefined);
    assert.deepEqual(vulnerability.get("tags"), [], 'Empty Types');

    // vulnerability.set("types", [1]);
    // assert.equal(vulnerability.get("tags")[0].string, "Static", 'Risk Type');
    // vulnerability.set("types", [2]);
    // assert.equal(vulnerability.get("tags")[0].string, "Dynamic", 'Risk Type');
    // vulnerability.set("types", [3]);
    // assert.equal(vulnerability.get("tags")[0].string, "Manual", 'Risk Type');
    // vulnerability.set("types", [4]);
    // assert.equal(vulnerability.get("tags")[0].string, "API", 'Risk Type');
  });
});
